---

- name: add {{ jbrowse_build_user }} to www-data group
  user:
    name: "{{ jbrowse_build_user }}"
    groups: "www-data" 
    append: yes

- name: Install NVM as user (which adds NVM initialisation to .bashrc)
  shell: |
    curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/{{ nvm_version }}/install.sh | bash
  args:
    creates: "$HOME/.nvm"  # Only run if NVM is not already installed
  become: false
  become_user: "{{ jbrowse_build_user }}"

- name: Install Node.js version {{ node_version }} using NVM 
  shell: |
    . $HOME/.nvm/nvm.sh && nvm install {{ node_version }}
  args:
    executable: /bin/bash
    chdir: "$HOME"
    creates: "$HOME/.nvm/versions/node/v{{ node_version }}.*"
  become: false
  become_user: "{{ jbrowse_build_user }}"

- name: Install Yarn 1.x globally with NVM
  shell: |
    . $HOME/.nvm/nvm.sh && npm install -g yarn
  args:
    executable: /bin/bash
    chdir: "$HOME"
    creates: "$HOME/.nvm/versions/node/v{{ node_version }}.*/lib/node_modules/yarn"
  become: false
  become_user: "{{ jbrowse_build_user }}"

- name: Get Yarn global bin path for {{ jbrowse_build_user }}
  shell: |
    . $HOME/.nvm/nvm.sh && yarn global bin
  args:
    executable: /bin/bash
    chdir: "$HOME"
  become: false
  become_user: "{{ jbrowse_build_user }}"
  register: yarn_bin_path
  failed_when: false  # prevent failure when running with --check before yarn installed
  changed_when: false # don't mark it as a change

- name: Ensure Yarn global bin path is in .bashrc for {{ jbrowse_build_user }}
  lineinfile:
    path: "/home/{{ jbrowse_build_user }}/.bashrc"
    line: 'export PATH="{{ yarn_bin_path.stdout }}:$PATH"'
    state: present
    insertafter: EOF
  become: false
  become_user: "{{ jbrowse_build_user }}"

