---
- name: change hostname to hostname defined in inventory
  hostname:
    name: "{{ inventory_hostname }}"

- name: add hostname to /etc/hosts
  lineinfile:
    dest: /etc/hosts
    regexp: '^127\.0\.0\.1[ \t]+localhost'
    line: "127.0.0.1 localhost {{ inventory_hostname }}"
    state: present

- name: disable update_etc_hosts in cloud.cfg to prevent regeneration of /etc/hosts on reboot
  lineinfile:
    dest: /etc/cloud/cloud.cfg
    regexp: 'update_etc_hosts'
    line: '# - update_etc_hosts'

- name: set timezone to Australia/Brisbane
  timezone:
    name: Australia/Brisbane

# grep args: -c count number of matches; -F pattern is a plain string
# grep returns 0 if a line is selected, 1 if no lines were selected, and 2 if an error occurred
- name: "Check if any Apollos have been defined in /etc/hosts skipping host's name"
  shell:
    cmd: "cat /etc/hosts | grep -v ^127.0.* | grep -cF apollo-"
  register: var_etc_hosts
  failed_when: "var_etc_hosts.rc not in [ 0, 1 ]"

- name: "Print how many apollo entries defined in /etc/hosts" 
  debug:
    msg: "var_etc_hosts.stdout={{ var_etc_hosts.stdout }}"

- name: "copy hosts file with apollo local IPs from ansible server to host"
  copy:
    src: "/etc/hosts"
    dest: "/tmp/etc_hosts"
    force: yes
  when: var_etc_hosts.stdout == "0"

- name: "Backup original /etc/hosts file"
  copy:
    src: "/etc/hosts"
    dest: "/etc/hosts.orig"
    remote_src: yes
  when: var_etc_hosts.stdout == "0"

- name: "Append entries for Apollo hosts at the end of the /etc/hosts file"
  shell:
    cmd: "cat /tmp/etc_hosts | grep -v 127.0.0.1 | grep -F apollo- >> /etc/hosts"
  when: var_etc_hosts.stdout == "0"

- name: "Cleanup temp file copied from ansible server"
  file:
    path: /tmp/etc_hosts
    state: absent

