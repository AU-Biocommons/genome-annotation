---
- name: "set facts"
  set_fact:
    host_machine_simple_name: "{{ target_dev_short_machine_name if target_environment == 'test' else create_nfs_machine_name }}"
    etc_exports_file_path: "{{create_nfs_export_file_path}}"
    home_data_hostname_dir_path: "{{create_nfs_export_main_dir_path}}"
    apollo_data_dir_path: "{{create_nfs_home_data_dir_path}}/{{create_nfs_apollo_data_dir_path}}"
    sourcedata_dir_path: "{{create_nfs_home_data_dir_path}}/{{create_nfs_sourcedata_dir_path}}"
    ubuntu_version: "{{ ubuntu_version | string }}" # otherwise 22.04 (for eg) is interpreted as a float

- name: "debug facts - host_machine_simple_name - etc_exports_file_path"
  debug:
    msg: "Host/machine simple name = {{ host_machine_simple_name }} - dir path = {{etc_exports_file_path}}"

- name: "debug facts apollo_data_dir_path - sourcedata_dir_path"
  debug:
    msg: "apollo data dir path = {{apollo_data_dir_path}} - sourcedata dir path = {{ sourcedata_dir_path }}"

- name: "check that dir {{home_data_hostname_dir_path}} exists and register result"
  stat: "path={{home_data_hostname_dir_path}}"
  register: "stat_result"

- name: "Create dir {{home_data_hostname_dir_path}} stat_result.stat.exists = {{stat_result.stat.exists}}"
  file:
    path: "{{home_data_hostname_dir_path}}"
    state: "directory"
    owner: "root"
    group: "root"
    mode: "755"
    recurse: yes
  when: "stat_result.stat.exists == false"

- name: "Read {{ etc_exports_file_path }} content"
  shell: "cat {{ etc_exports_file_path }} | grep {{host_machine_simple_name}}"
  register: var_etc_hosts
  # There are two ways this can be done as per below SO question
  # https://stackoverflow.com/questions/50440515/ansible-error-on-shell-command-returning-zero
  # using "ignore_errors: true"
  # or as below which I think it's a cleaner way
  failed_when: var_etc_hosts.rc != 1 and var_etc_hosts.rc != 0

- name: "set facts"
  set_fact:
    var_regex_etc_exports: "{{ var_etc_hosts.stdout }}"
    var_line_to_append: "/srv/export/data/{{ host_machine_simple_name }} {{ host_machine_simple_name }}(rw,nohide,sync,subtree_check)"

- name: "debug result of regex"
  debug:
    msg: "Result of regex = {{ var_regex_etc_exports }}"

- name: "debug line to append"
  debug:
    msg: "Line to append = {{ var_line_to_append }}"

- name: "Replace IP address in hosts file if host already exists"
  lineinfile:
    dest: "{{ etc_exports_file_path }}"
    regexp: '.*{{ host_machine_simple_name }}$'
    line: "{{ var_line_to_append }}"
    state: present
  when: var_etc_hosts.stdout != ""

- name: "Append IP address and host name in hosts file at the end of the file"
  lineinfile:
    dest: "{{ etc_exports_file_path }}"
    line: "{{ var_line_to_append }}"
  when: var_etc_hosts.stdout == ""

- name: "check that dir {{home_data_hostname_dir_path}} exists and register result"
  stat: "path={{home_data_hostname_dir_path}}"
  register: "stat_result_after"

- name: "Export new directory to be mounted by apollo VM {{create_nfs_machine_name}}"
  command: "exportfs -ra"
  when: "stat_result_after.stat.exists == true"

- name: "debug facts apollo_data_dir_path and sourcedata_dir_path"
  debug:
    msg: "apollo data dir path = {{apollo_data_dir_path}} - sourcedata dir path = {{ sourcedata_dir_path }}"

- name: "check that dir {{apollo_data_dir_path}} exists and register result"
  stat: "path={{apollo_data_dir_path}}"
  register: "stat_result_apollo_data"
 
- name: "Create dir {{apollo_data_dir_path}} stat_result.stat.exists = {{stat_result.stat.exists}}"
  file:
    path: "{{apollo_data_dir_path}}"
    state: "directory"
    owner: "{{create_nfs_user_name}}"
    group: "tomcat"
    mode: "02775"
    recurse: yes
  when: "stat_result_apollo_data.stat.exists == false"

- name: "check that dir {{sourcedata_dir_path}} exists and register result"
  stat: "path={{sourcedata_dir_path}}"
  register: "stat_result_sourcedata"
  
- name: "Create dir {{sourcedata_dir_path}} stat_result.stat.exists = {{stat_result.stat.exists}}"
  file:
    path: "{{sourcedata_dir_path}}"
    state: "directory"
    owner: "{{create_nfs_user_name}}"
    group: "tomcat"
    mode: "02775"
    recurse: yes
  when: "stat_result_sourcedata.stat.exists == false"

- name: "Debug ubuntu_version value"
  debug:
    msg: "ubuntu_version is {{ ubuntu_version }} (type: {{ ubuntu_version | type_debug }})"

- name: "Set tomcat GID based on Ubuntu version {{ ubuntu_version }}"
  set_fact:
    tomcat_gid: "{{ '998' if ubuntu_version == '22.04' else '997' }}"

- name: "debug fact tomcat_gid"
  debug:
    msg: "tomcat_gid = {{ tomcat_gid }} for ubuntu_version = {{ ubuntu_version }}"

- name: "Set group ownership of {{ apollo_data_dir_path }} with correct tomcat GID (for Ubuntu 22.04)"
  command: chgrp -R "{{ tomcat_gid }}" "{{ apollo_data_dir_path }}"
  when: tomcat_gid != '997'

- name: "Set group ownership of {{ sourcedata_dir_path }} with correct tomcat GID (for Ubuntu 22.04)"
  command: chgrp -R "{{ tomcat_gid }}" "{{ sourcedata_dir_path }}"
  when: tomcat_gid != '997'

