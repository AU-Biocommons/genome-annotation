
# test VM 
resource "openstack_compute_instance_v2" "apollo_test" {
  name              = "apollo_test"
  flavor_name       = "m3.xsmall"
  key_pair          = "apollo-nectar"
  availability_zone = "ardc-syd-1"

  block_device {          # define boot volume with custom size
    uuid                  = "49f677df-01e5-45c9-9611-609ef21f60e1" # NeCTAR Ubuntu 24.04 LTS (Noble) amd64
    source_type           = "image"
    volume_size           = 50
    boot_index            = 0
    destination_type      = "volume"
    delete_on_termination = true
  }

  network {
    name =        "apollo-internal-network"  
  }

  security_groups = [
    "default",
    "SSH_access",
    "NRPE_local_access",
    "ICMP_local_access"
  ]
}

# floating IP in ardc-syd IP pool
resource "openstack_networking_floatingip_v2" "apollo_test_fip" {
  pool = "ardc-syd"  # IP in ardc-syd availability zone IP pool
}

# Fetch the port for VM instance based on the fixed IP
data "openstack_networking_port_v2" "apollo_test_port" {
    fixed_ip = openstack_compute_instance_v2.apollo_test.network[0].fixed_ip_v4
}

# attach the created floating IP using the port ID
resource "openstack_networking_floatingip_associate_v2" "apollo_test_fips_associate" {
    floating_ip = openstack_networking_floatingip_v2.apollo_test_fip.address
    port_id     = data.openstack_networking_port_v2.apollo_test_port.id
}

/*
# attach IP to VM (deprecated method)
resource "openstack_compute_floatingip_associate_v2" "apollo_test_floating_ip_assoc" {
  floating_ip = openstack_networking_floatingip_v2.apollo_test_floating_ip.address
  instance_id = openstack_compute_instance_v2.apollo_test.id
}
*/

/*
# 100G test volume
resource "openstack_blockstorage_volume_v3" "test_vol" {
    availability_zone = "ardc-syd-1"
    name              = "test-vol"
    size              = 100
}

# attach volume to VM
resource "openstack_compute_volume_attach_v2" "test_vol" {
  instance_id       = openstack_compute_instance_v2.apollo_test.id
  volume_id         = openstack_blockstorage_volume_v3.test_vol.id
  #device	    = "/dev/vdb"
}
*/
